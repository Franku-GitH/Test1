Import-Module ActiveDirectory

# ===== Nastavení =====
$OU = "OU=Computers,DC=example,DC=com"
$Group = 'DOMENA\DelegovanaSkupina'

# GUID pro Computer třídu
$ComputerClassGUID = [Guid]"bf967a86-0de6-11d0-a285-00aa003049e2"

# Mapování práv
$RightsMap = @(
    @{ Name = "Reset Password"; GUID = "00299570-246d-11d0-a768-00aa006e0529"; Dsacls = "CA;Reset Password;computer" },
    @{ Name = "Validated Write DNS Host Name"; GUID = "72e39547-7b18-11d1-adef-00c04fd8d5cd"; Dsacls = "SW;Validated write to DNS host name;computer" },
    @{ Name = "Validated Write SPN"; GUID = "f3a64788-5306-11d1-a9c5-0000f80367c1"; Dsacls = "SW;Validated write to service principal name;computer" },
    @{ Name = "Write userAccountControl"; GUID = "bf967a68-0de6-11d0-a285-00aa003049e2"; Dsacls = "WP;userAccountControl;computer" }
)

# Načtení ACL
$Acl = Get-Acl "AD:$OU"
$AccessRules = $Acl.Access | Where-Object { $_.IdentityReference -like "*$Group*" }

Write-Host "`n[DEBUG] Nalezené záznamy pro skupinu:" -ForegroundColor Yellow
$AccessRules | Format-Table IdentityReference, ActiveDirectoryRights, ObjectType, InheritedObjectType, InheritanceType

Write-Host "`nKontrola oprávnění:`n"

foreach ($Right in $RightsMap) {
    $Guid = [Guid]$Right.GUID
    $HasRight = $AccessRules | Where-Object {
        # Přesná shoda na atribut + Computer nebo All descendants
        ($_.ObjectType -eq $Guid -and ($_.InheritedObjectType -eq $ComputerClassGUID -or $_.InheritedObjectType -eq [Guid]"00000000-0000-0000-0000-000000000000")) -or
        # GenericAll pokrývá všechno
        ($_.ActiveDirectoryRights -match "GenericAll") -or
        # All attributes (ObjectType = nuly) + Computer
        ($_.ObjectType -eq [Guid]"00000000-0000-0000-0000-000000000000" -and $_.InheritedObjectType -eq $ComputerClassGUID)
    }

    if ($HasRight) {
        Write-Host "[OK] $($Right.Name)" -ForegroundColor Green
        foreach ($rule in $HasRight) {
            Write-Host "   -> Důvod: $($rule.ActiveDirectoryRights), ObjectType=$($rule.ObjectType), InheritedObjectType=$($rule.InheritedObjectType)" -ForegroundColor DarkGray
        }
    } else {
        Write-Host "[CHYBÍ] $($Right.Name)" -ForegroundColor Red
        Write-Host " -> Přidej pomocí:" -ForegroundColor Yellow
        $cmd = 'dsacls "' + $OU + '" /G "' + $Group + ':' + $Right.Dsacls + '" /I:S'
        Write-Host $cmd -ForegroundColor Cyan
    }
}

# Kontrola Create/Delete Computer Objects
$CreateDelete = $AccessRules | Where-Object {
    ($_.ActiveDirectoryRights -match "CreateChild|DeleteChild") -or ($_.ActiveDirectoryRights -match "GenericAll")
}
if ($CreateDelete) {
    Write-Host "[OK] Create/Delete Computer Objects" -ForegroundColor Green
} else {
    Write-Host "[CHYBÍ] Create/Delete Computer Objects" -ForegroundColor Red
    Write-Host " -> Přidej pomocí:" -ForegroundColor Yellow
    $cmd = 'dsacls "' + $OU + '" /G "' + $Group + ':CCDC;computer" /I:S'
    Write-Host $cmd -ForegroundColor Cyan
}
``
